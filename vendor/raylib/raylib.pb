# Auto-generated PB bindings for raylib

# pyright: reportAssignmentType=none

class Color:
    r: int
    g: int
    b: int
    a: int

class Vector2:
    x: float
    y: float
def make_Vector2(x: float, y: float) -> Vector2: ...

class Rectangle:
    x: float
    y: float
    width: float
    height: float
def make_Rectangle(x: float, y: float, width: float, height: float) -> Rectangle: ...

class Sound:
    pass
def make_Sound() -> Sound: ...

class Font:
    pass

DARKGRAY: Color = ...
LIGHTGRAY: Color = ...
RAYWHITE: Color = ...
RED: Color = ...

FLAG_VSYNC_HINT: int = ...
FLAG_MSAA_4X_HINT: int = ...
LOG_ALL: int = ...

KEY_NULL: int = ...
KEY_ESCAPE: int = ...
KEY_ENTER: int = ...
KEY_SPACE: int = ...
KEY_W: int = ...
KEY_S: int = ...
KEY_R: int = ...
KEY_P: int = ...
KEY_M: int = ...
KEY_UP: int = ...
KEY_DOWN: int = ...
KEY_Y: int = ...
KEY_N: int = ...

def InitWindow(width: int, height: int, title: str) -> None: ...
def CloseWindow() -> None: ...
def SetTargetFPS(fps: int) -> None: ...
def WindowShouldClose() -> bool: ...
def GetFrameTime() -> float: ...
def SetConfigFlags(flags: int) -> None: ...
def SetTraceLogLevel(level: int) -> None: ...
def GetScreenWidth() -> int: ...
def GetScreenHeight() -> int: ...
def IsKeyPressed(key: int) -> bool: ...
def IsKeyDown(key: int) -> bool: ...
def SetExitKey(key: int) -> None: ...

def BeginDrawing() -> None: ...
def EndDrawing() -> None: ...
def ClearBackground(color: Color) -> None: ...
def DrawRectangleRec(rect: Rectangle, color: Color) -> None: ...
def DrawCircleV(center: Vector2, radius: float, color: Color) -> None: ...
def DrawText(text: str, posX: int, posY: int, fontSize: int, color: Color) -> None: ...
def DrawTextPro(font: Font, text: str, position: Vector2, origin: Vector2, rotation: float, fontSize: float, spacing: float, color: Color) -> None: ...
def DrawLineEx(startPos: Vector2, endPos: Vector2, thick: float, color: Color) -> None: ...
def MeasureText(text: str, fontSize: int) -> int: ...
def GetFontDefault() -> Font: ...

def InitAudioDevice() -> None: ...
def CloseAudioDevice() -> None: ...
def LoadSound(path: str) -> Sound: ...
def UnloadSound(sound: Sound) -> None: ...
def PlaySound(sound: Sound) -> None: ...

def Vector2Add(v1: Vector2, v2: Vector2) -> Vector2: ...
def Vector2Subtract(v1: Vector2, v2: Vector2) -> Vector2: ...
def Vector2Normalize(v: Vector2) -> Vector2: ...
def Vector2Scale(v: Vector2, scale: float) -> Vector2: ...
def Vector2Length(v: Vector2) -> float: ...

def CheckCollisionCircleRec(center: Vector2, radius: float, rec: Rectangle) -> bool: ...
def GetRandomValue(min: int, max: int) -> int: ...
